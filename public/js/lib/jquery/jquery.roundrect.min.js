  


<!DOCTYPE html>
<html>
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# githubog: http://ogp.me/ns/fb/githubog#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <title>RoundRect/roundrect.min.js at master · csnover/RoundRect · GitHub</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />
    <link rel="apple-touch-icon-precomposed" sizes="57x57" href="apple-touch-icon-114.png" />
    <link rel="apple-touch-icon-precomposed" sizes="114x114" href="apple-touch-icon-114.png" />
    <link rel="apple-touch-icon-precomposed" sizes="72x72" href="apple-touch-icon-144.png" />
    <link rel="apple-touch-icon-precomposed" sizes="144x144" href="apple-touch-icon-144.png" />

    
    
    <link rel="icon" type="image/x-icon" href="/favicon.png" />

    <meta content="authenticity_token" name="csrf-param" />
<meta content="POSLfkwyrQtyQF80luCt0fPY+84WhIn7BZk/klxIBOM=" name="csrf-token" />

    <link href="https://a248.e.akamai.net/assets.github.com/assets/github-18a66f46f1b964f811ac68ae373b549557852c62.css" media="screen" rel="stylesheet" type="text/css" />
    <link href="https://a248.e.akamai.net/assets.github.com/assets/github2-e35017e138e6a0951c08c6c9643a765bc8a4d645.css" media="screen" rel="stylesheet" type="text/css" />
    


    <script src="https://a248.e.akamai.net/assets.github.com/assets/frameworks-c12eab4295f1d4a7040c603970f25528f7f173ba.js" type="text/javascript"></script>
    
    <script defer="defer" src="https://a248.e.akamai.net/assets.github.com/assets/github-f707bc72badae7612a2eb356105263682fee7aaf.js" type="text/javascript"></script>
    
    

      <link rel='permalink' href='/csnover/RoundRect/blob/a4043ff48264e0e1e7878d7b436314c541ec381e/roundrect.min.js'>
    <meta property="og:title" content="RoundRect"/>
    <meta property="og:type" content="githubog:gitrepository"/>
    <meta property="og:url" content="https://github.com/csnover/RoundRect"/>
    <meta property="og:image" content="https://a248.e.akamai.net/assets.github.com/images/gravatars/gravatar-140.png?1338956357"/>
    <meta property="og:site_name" content="GitHub"/>
    <meta property="og:description" content="You probably want to use CSS3 PIE instead. Contribute to RoundRect development by creating an account on GitHub."/>

    <meta name="description" content="You probably want to use CSS3 PIE instead. Contribute to RoundRect development by creating an account on GitHub." />

  <link href="https://github.com/csnover/RoundRect/commits/master.atom" rel="alternate" title="Recent Commits to RoundRect:master" type="application/atom+xml" />

  </head>


  <body class="logged_out page-blob windows vis-public env-production ">
    <div id="wrapper">

    
    

      <div id="header" class="true clearfix">
        <div class="container clearfix">
          <a class="site-logo" href="https://github.com/">
            <img alt="GitHub" class="github-logo-4x" height="30" src="https://a248.e.akamai.net/assets.github.com/images/modules/header/logov7@4x.png?1338956357" />
            <img alt="GitHub" class="github-logo-4x-hover" height="30" src="https://a248.e.akamai.net/assets.github.com/images/modules/header/logov7@4x-hover.png?1338956357" />
          </a>


                  <!--
      make sure to use fully qualified URLs here since this nav
      is used on error pages on other domains
    -->
    <ul class="top-nav logged_out">
        <li class="pricing"><a href="https://github.com/plans">Signup and Pricing</a></li>
        <li class="explore"><a href="https://github.com/explore">Explore GitHub</a></li>
      <li class="features"><a href="https://github.com/features">Features</a></li>
        <li class="blog"><a href="https://github.com/blog">Blog</a></li>
      <li class="login"><a href="https://github.com/login?return_to=%2Fcsnover%2FRoundRect%2Fblob%2Fmaster%2Froundrect.min.js">Sign in</a></li>
    </ul>



          
        </div>
      </div>

      

      

            <div class="site hfeed" itemscope itemtype="http://schema.org/WebPage">
      <div class="container hentry">
        <div class="pagehead repohead instapaper_ignore readability-menu">
        <div class="title-actions-bar">
          



              <ul class="pagehead-actions">



          <li>
            <span class="star-button"><a href="/login?return_to=%2Fcsnover%2FRoundRect" class="minibutton btn-star js-toggler-target entice tooltipped leftwards" title="You must be signed in to use this feature" rel="nofollow">Star</a><a class="social-count js-social-count" href="/csnover/RoundRect/stargazers">35</a></span>
          </li>
          <li>
            <a href="/login?return_to=%2Fcsnover%2FRoundRect" class="minibutton btn-fork js-toggler-target fork-button entice tooltipped leftwards"  title="You must be signed in to fork a repository" rel="nofollow">Fork</a><a href="/csnover/RoundRect/network" class="social-count">6</a>
          </li>
    </ul>

          <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
            <span class="repo-label"><span>public</span></span>
            <span class="mega-icon mega-icon-public-repo"></span>
            <span class="author vcard">
<a href="/csnover" class="url fn" itemprop="url" rel="author">              <span itemprop="title">csnover</span>
              </a></span> /
            <strong><a href="/csnover/RoundRect" class="js-current-repository">RoundRect</a></strong>
          </h1>
        </div>

          

  <ul class="tabs">
    <li><a href="/csnover/RoundRect" class="selected" highlight="repo_sourcerepo_downloadsrepo_commitsrepo_tagsrepo_branches">Code</a></li>
    <li><a href="/csnover/RoundRect/network" highlight="repo_network">Network</a>
    <li><a href="/csnover/RoundRect/pulls" highlight="repo_pulls">Pull Requests <span class='counter'>1</span></a></li>



    <li><a href="/csnover/RoundRect/graphs" highlight="repo_graphsrepo_contributors">Graphs</a></li>


  </ul>
  
<div class="frame frame-center tree-finder" style="display:none"
      data-tree-list-url="/csnover/RoundRect/tree-list/a4043ff48264e0e1e7878d7b436314c541ec381e"
      data-blob-url-prefix="/csnover/RoundRect/blob/a4043ff48264e0e1e7878d7b436314c541ec381e"
    >

  <div class="breadcrumb">
    <span class="bold"><a href="/csnover/RoundRect">RoundRect</a></span> /
    <input class="tree-finder-input js-navigation-enable" type="text" name="query" autocomplete="off" spellcheck="false">
  </div>

    <div class="octotip">
      <p>
        <a href="/csnover/RoundRect/dismiss-tree-finder-help" class="dismiss js-dismiss-tree-list-help" title="Hide this notice forever" rel="nofollow">Dismiss</a>
        <span class="bold">Octotip:</span> You've activated the <em>file finder</em>
        by pressing <span class="kbd">t</span> Start typing to filter the
        file list. Use <span class="kbd badmono">↑</span> and
        <span class="kbd badmono">↓</span> to navigate,
        <span class="kbd">enter</span> to view files.
      </p>
    </div>

  <table class="tree-browser" cellpadding="0" cellspacing="0">
    <tr class="js-header"><th>&nbsp;</th><th>name</th></tr>
    <tr class="js-no-results no-results" style="display: none">
      <th colspan="2">No matching files</th>
    </tr>
    <tbody class="js-results-list js-navigation-container">
    </tbody>
  </table>
</div>

<div id="jump-to-line" style="display:none">
  <h2>Jump to Line</h2>
  <form accept-charset="UTF-8">
    <input class="textfield" type="text">
    <div class="full-button">
      <button type="submit" class="classy">
        Go
      </button>
    </div>
  </form>
</div>


<div class="subnav-bar">

  <ul class="actions subnav">
    <li><a href="/csnover/RoundRect/tags" class="blank" highlight="repo_tags">Tags <span class="counter">0</span></a></li>
    <li><a href="/csnover/RoundRect/downloads" class="blank downloads-blank" highlight="repo_downloads">Downloads <span class="counter">0</span></a></li>
    
  </ul>

  <ul class="scope">
    <li class="switcher">

      <div class="context-menu-container js-menu-container js-context-menu">
        <a href="#"
           class="minibutton bigger switcher js-menu-target js-commitish-button btn-branch repo-tree"
           data-hotkey="w"
           data-master-branch="master"
           data-ref="master">
           <span><i>branch:</i> master</span>
        </a>

        <div class="context-pane commitish-context js-menu-content">
          <a href="javascript:;" class="close js-menu-close"><span class="mini-icon mini-icon-remove-close"></span></a>
          <div class="context-title">Switch branches/tags</div>
          <div class="context-body pane-selector commitish-selector js-navigation-container">
            <div class="filterbar">
              <input type="text" id="context-commitish-filter-field" class="js-navigation-enable" placeholder="Filter branches/tags" data-filterable />

              <ul class="tabs">
                <li><a href="#" data-filter="branches" class="selected">Branches</a></li>
                <li><a href="#" data-filter="tags">Tags</a></li>
              </ul>
            </div>

            <div class="js-filter-tab js-filter-branches" data-filterable-for="context-commitish-filter-field" data-filterable-type=substring>
              <div class="no-results js-not-filterable">Nothing to show</div>
                <div class="commitish-item branch-commitish selector-item js-navigation-item js-navigation-target selected">
                  <span class="mini-icon mini-icon-confirm"></span>
                  <h4>
                      <a href="/csnover/RoundRect/blob/master/roundrect.min.js" class="js-navigation-open" data-name="master" rel="nofollow">master</a>
                  </h4>
                </div>
            </div>

            <div class="js-filter-tab js-filter-tags" style="display:none" data-filterable-for="context-commitish-filter-field" data-filterable-type=substring>
              <div class="no-results js-not-filterable">Nothing to show</div>
            </div>
          </div>
        </div><!-- /.commitish-context-context -->
      </div>

    </li>
  </ul>

  <ul class="subnav with-scope">

    <li><a href="/csnover/RoundRect" class="selected" highlight="repo_source">Files</a></li>
    <li><a href="/csnover/RoundRect/commits/master" highlight="repo_commits">Commits</a></li>
    <li><a href="/csnover/RoundRect/branches" class="" highlight="repo_branches" rel="nofollow">Branches <span class="counter">1</span></a></li>
  </ul>

</div>

  
  
  


          

        </div><!-- /.repohead -->

        <div id="js-repo-pjax-container" data-pjax-container>
          




<!-- blob contrib key: blob_contributors:v21:95aea28e8d48e9966e0d5ac19cac5570 -->
<!-- blob contrib frag key: views10/v8/blob_contributors:v21:95aea28e8d48e9966e0d5ac19cac5570 -->

<!-- block_view_fragment_key: views10/v8/blob:v21:2fb3d144e2a4e777454eca8b6a52b7e4 -->
  <div id="slider">

    <div class="breadcrumb" data-path="roundrect.min.js/">
      <b itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/csnover/RoundRect/tree/a4043ff48264e0e1e7878d7b436314c541ec381e" class="js-rewrite-sha" itemprop="url"><span itemprop="title">RoundRect</span></a></b> / <strong class="final-path">roundrect.min.js</strong> <span class="js-clippy mini-icon mini-icon-clippy " data-clipboard-text="roundrect.min.js" data-copied-hint="copied!" data-copy-hint="copy to clipboard"></span>
    </div>

      
  <div class="commit file-history-tease js-blob-contributors-content" data-path="roundrect.min.js/">
    <img class="main-avatar" height="24" src="https://secure.gravatar.com/avatar/0fd00a88765eda97fcbe027185d64cd1?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png" width="24" />
    <span class="author">Colin Snover</span>
    <time class="js-relative-date" datetime="2010-07-09T22:33:07-07:00" title="2010-07-09 22:33:07">July 09, 2010</time>
    <div class="commit-title">
        <a href="/csnover/RoundRect/commit/a4043ff48264e0e1e7878d7b436314c541ec381e" class="message">Stores references to event handlers to prevent memory leaks in IE7. F…</a>
    </div>

    <div class="participation">
      <p class="quickstat"><a href="#blob_contributors_box" rel="facebox"><strong>0</strong> contributors</a></p>
      
    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2>Users on GitHub who have contributed to this file</h2>
      <ul class="facebox-user-list">
      </ul>
    </div>
  </div>


    <div class="frames">
      <div class="frame frame-center" data-path="roundrect.min.js/" data-permalink-url="/csnover/RoundRect/blob/a4043ff48264e0e1e7878d7b436314c541ec381e/roundrect.min.js" data-title="RoundRect/roundrect.min.js at master · csnover/RoundRect · GitHub" data-type="blob">

        <div id="files" class="bubble">
          <div class="file">
            <div class="meta">
              <div class="info">
                <span class="icon"><b class="mini-icon mini-icon-text-file"></b></span>
                <span class="mode" title="File Mode">file</span>
                  <span>32 lines (31 sloc)</span>
                <span>15.663 kb</span>
              </div>
              <ul class="button-group actions">
                  <li>
                    <a class="grouped-button file-edit-link minibutton bigger lighter js-rewrite-sha" href="/csnover/RoundRect/edit/a4043ff48264e0e1e7878d7b436314c541ec381e/roundrect.min.js" data-method="post" rel="nofollow" data-hotkey="e">Edit</a>
                  </li>

                <li>
                  <a href="/csnover/RoundRect/raw/master/roundrect.min.js" class="minibutton btn-raw grouped-button bigger lighter" id="raw-url">Raw</a>
                </li>
                  <li>
                    <a href="/csnover/RoundRect/blame/master/roundrect.min.js" class="minibutton btn-blame grouped-button bigger lighter">Blame</a>
                  </li>
                <li>
                  <a href="/csnover/RoundRect/commits/master/roundrect.min.js" class="minibutton btn-history grouped-button bigger lighter" rel="nofollow">History</a>
                </li>
              </ul>
            </div>
              <div class="data type-javascript">
      <table cellpadding="0" cellspacing="0" class="lines">
        <tr>
          <td>
            <pre class="line_numbers"><span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
<span id="L3" rel="#L3">3</span>
<span id="L4" rel="#L4">4</span>
<span id="L5" rel="#L5">5</span>
<span id="L6" rel="#L6">6</span>
<span id="L7" rel="#L7">7</span>
<span id="L8" rel="#L8">8</span>
<span id="L9" rel="#L9">9</span>
<span id="L10" rel="#L10">10</span>
<span id="L11" rel="#L11">11</span>
<span id="L12" rel="#L12">12</span>
<span id="L13" rel="#L13">13</span>
<span id="L14" rel="#L14">14</span>
<span id="L15" rel="#L15">15</span>
<span id="L16" rel="#L16">16</span>
<span id="L17" rel="#L17">17</span>
<span id="L18" rel="#L18">18</span>
<span id="L19" rel="#L19">19</span>
<span id="L20" rel="#L20">20</span>
<span id="L21" rel="#L21">21</span>
<span id="L22" rel="#L22">22</span>
<span id="L23" rel="#L23">23</span>
<span id="L24" rel="#L24">24</span>
<span id="L25" rel="#L25">25</span>
<span id="L26" rel="#L26">26</span>
<span id="L27" rel="#L27">27</span>
<span id="L28" rel="#L28">28</span>
<span id="L29" rel="#L29">29</span>
<span id="L30" rel="#L30">30</span>
<span id="L31" rel="#L31">31</span>
</pre>
          </td>
          <td width="100%">
                <div class="highlight"><pre><div class='line' id='LC1'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">j</span><span class="p">){</span><span class="kd">function</span> <span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="o">||</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)}}</span><span class="kd">function</span> <span class="nx">C</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">y</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nb">document</span><span class="p">)</span><span class="o">:</span><span class="nx">D</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">E</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">left</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">runtimeStyle</span><span class="p">.</span><span class="nx">left</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentStyle</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">G</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">e</span><span class="p">))</span><span class="k">return</span> <span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentStyle</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="mi">10</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">e</span><span class="p">)){</span><span class="nx">a</span><span class="p">.</span><span class="nx">runtimeStyle</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentStyle</span><span class="p">.</span><span class="nx">left</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">pixelLeft</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">runtimeStyle</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">return</span> <span class="nx">e</span><span class="p">}</span><span class="k">return</span> <span class="mi">0</span><span class="p">}</span><span class="kd">function</span> <span class="nx">A</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="o">||!</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeName</span><span class="o">||!</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">)</span><span class="k">return</span> <span class="kc">false</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">();</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">();</span></div><div class='line' id='LC2'><span class="k">return</span> <span class="nx">b</span><span class="o">===</span><span class="s2">&quot;BUTTON&quot;</span><span class="o">||</span><span class="nx">b</span><span class="o">===</span><span class="s2">&quot;INPUT&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">===</span><span class="s2">&quot;image&quot;</span><span class="o">||</span><span class="nx">a</span><span class="o">===</span><span class="s2">&quot;button&quot;</span><span class="o">||</span><span class="nx">a</span><span class="o">===</span><span class="s2">&quot;submit&quot;</span><span class="o">||</span><span class="nx">a</span><span class="o">===</span><span class="s2">&quot;reset&quot;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="o">||!</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">)</span><span class="k">return</span> <span class="kc">false</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">();</span><span class="nx">b</span><span class="o">===</span><span class="s2">&quot;INPUT&quot;</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">();</span><span class="k">return</span> <span class="nx">b</span><span class="o">===</span><span class="s2">&quot;INPUT&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">===</span><span class="s2">&quot;text&quot;</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">===</span><span class="s2">&quot;password&quot;</span><span class="p">)</span><span class="o">||</span><span class="nx">b</span><span class="o">===</span><span class="s2">&quot;TEXTAREA&quot;</span><span class="p">}</span><span class="kd">function</span> <span class="nx">w</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="p">)</span><span class="nb">document</span><span class="p">.</span><span class="nx">detachEvent</span><span class="p">(</span><span class="s2">&quot;onreadystatechange&quot;</span><span class="p">,</span><span class="nx">w</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">readyState</span><span class="o">===</span><span class="s2">&quot;complete&quot;</span><span class="p">){</span><span class="nb">document</span><span class="p">.</span><span class="nx">detachEvent</span><span class="p">(</span><span class="s2">&quot;onreadystatechange&quot;</span><span class="p">,</span><span class="nx">w</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">y</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">D</span><span class="p">.</span><span class="nx">shift</span><span class="p">();)</span><span class="nx">a</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nb">document</span><span class="p">);</span><span class="k">else</span> <span class="nx">setTimeout</span><span class="p">(</span><span class="nx">w</span><span class="p">,</span></div><div class='line' id='LC3'><span class="mi">13</span><span class="p">)}}</span><span class="kd">function</span> <span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">p</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="nx">t</span><span class="p">]])</span><span class="k">throw</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Can\u2019t round already rounded rectangles (use RoundRect.create)&quot;</span><span class="p">);</span><span class="nx">p</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">=++</span><span class="nx">I</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">onPropertyChangeProxy</span><span class="o">=</span><span class="nx">r</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nb">window</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">propertyName</span><span class="p">;</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">onPropertyChange</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)})});</span><span class="k">this</span><span class="p">.</span><span class="nx">onStateChangeProxy</span><span class="o">=</span><span class="nx">r</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nb">window</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">type</span><span class="p">;</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">onStateChange</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)})});</span><span class="k">this</span><span class="p">.</span><span class="nx">onVmlStateChangeProxy</span><span class="o">=</span><span class="nx">r</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">onVmlStateChange</span><span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span></div><div class='line' id='LC4'><span class="nb">window</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">toElement</span><span class="p">)});</span><span class="k">this</span><span class="p">.</span><span class="nx">events</span><span class="o">=</span><span class="p">{</span><span class="nx">element</span><span class="o">:</span><span class="p">{},</span><span class="nx">container</span><span class="o">:</span><span class="p">{}};</span><span class="nx">C</span><span class="p">(</span><span class="nx">r</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">render</span><span class="p">();</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">start</span><span class="p">()}))}</span><span class="k">if</span><span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">){</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="s2">&quot;RoundRect&quot;</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="nx">s</span><span class="o">+</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">).</span><span class="nx">getTime</span><span class="p">(),</span><span class="nx">I</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="p">{},</span><span class="nx">B</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">documentMode</span><span class="o">===</span><span class="mi">8</span><span class="p">,</span><span class="nx">y</span><span class="o">=</span><span class="kc">false</span><span class="p">,</span><span class="nx">D</span><span class="o">=</span><span class="p">[],</span><span class="nx">u</span><span class="o">=</span><span class="p">{},</span><span class="nx">G</span><span class="o">=</span><span class="sr">/^-?\d+(?:px)?$/i</span><span class="p">,</span><span class="nx">H</span><span class="o">=</span><span class="sr">/^-?\d/</span><span class="p">,</span><span class="nx">z</span><span class="o">=</span><span class="nx">s</span><span class="o">+</span><span class="s2">&quot;-hover&quot;</span><span class="p">;(</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nx">B</span><span class="o">?</span><span class="nb">document</span><span class="p">.</span><span class="nx">namespaces</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="s2">&quot;rr&quot;</span><span class="p">,</span><span class="s2">&quot;urn:schemas-microsoft-com:vml&quot;</span><span class="p">,</span><span class="s2">&quot;#default#VML&quot;</span><span class="p">)</span><span class="o">:</span><span class="nb">document</span><span class="p">.</span><span class="nx">namespaces</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="s2">&quot;rr&quot;</span><span class="p">,</span><span class="s2">&quot;urn:schemas-microsoft-com:vml&quot;</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">10</span><span class="p">);</span><span class="k">return</span><span class="p">}</span><span class="k">try</span><span class="p">{</span><span class="nb">document</span><span class="p">.</span><span class="nx">execCommand</span><span class="p">(</span><span class="s2">&quot;BackgroundImageCache&quot;</span><span class="p">,</span></div><div class='line' id='LC5'><span class="kc">false</span><span class="p">,</span><span class="kc">true</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">d</span><span class="p">){}</span><span class="nx">b</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;style&quot;</span><span class="p">);</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">styleSheet</span><span class="p">.</span><span class="nx">addRule</span><span class="p">(</span><span class="s2">&quot;rr\\:shape&quot;</span><span class="p">,</span><span class="s2">&quot;behavior:url(#default#VML);display:inline-block&quot;</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">styleSheet</span><span class="p">.</span><span class="nx">addRule</span><span class="p">(</span><span class="s2">&quot;rr\\:group&quot;</span><span class="p">,</span><span class="s2">&quot;behavior:url(#default#VML);display:inline-block&quot;</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">styleSheet</span><span class="p">.</span><span class="nx">addRule</span><span class="p">(</span><span class="s2">&quot;rr\\:fill&quot;</span><span class="p">,</span><span class="s2">&quot;behavior:url(#default#VML);display:inline-block&quot;</span><span class="p">)})();</span><span class="nb">document</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">(</span><span class="s2">&quot;onreadystatechange&quot;</span><span class="p">,</span><span class="nx">w</span><span class="p">);(</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">y</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">doScroll</span><span class="p">(</span><span class="s2">&quot;left&quot;</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span><span class="p">}</span><span class="nx">w</span><span class="p">()}})();</span><span class="nb">window</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">(</span><span class="s2">&quot;onunload&quot;</span><span class="p">,</span></div><div class='line' id='LC6'><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span> <span class="k">in</span> <span class="nx">p</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">try</span><span class="p">{</span><span class="nx">p</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">destroy</span><span class="p">()}</span><span class="k">catch</span><span class="p">(</span><span class="nx">b</span><span class="p">){}</span><span class="nx">p</span><span class="o">=</span><span class="kc">null</span><span class="p">});</span><span class="nx">n</span><span class="p">.</span><span class="nx">expando</span><span class="o">=</span><span class="nx">t</span><span class="p">;</span><span class="nx">n</span><span class="p">.</span><span class="nx">disallowed</span><span class="o">=</span><span class="p">{</span><span class="nx">BODY</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">TABLE</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">TR</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">TD</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">SELECT</span><span class="o">:!</span><span class="nx">B</span><span class="p">,</span><span class="nx">OPTION</span><span class="o">:</span><span class="kc">true</span><span class="p">};</span><span class="nx">n</span><span class="p">.</span><span class="nx">create</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">t</span><span class="p">],</span><span class="nx">d</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">p</span><span class="p">[</span><span class="nx">c</span><span class="p">])){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">!==</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">dynamic</span><span class="o">!==</span><span class="nx">b</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">dynamic</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">start</span><span class="p">()</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">stop</span><span class="p">();</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span><span class="k">return</span> <span class="k">new</span> <span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)};</span><span class="nx">n</span><span class="p">.</span><span class="nx">gc</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span> <span class="k">in</span> <span class="nx">p</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="nx">p</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">element</span><span class="p">.</span><span class="nx">parentNode</span><span class="o">||</span><span class="nx">p</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">destroy</span><span class="p">()};</span><span class="nx">n</span><span class="p">.</span><span class="nx">processStyleSheets</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(</span><span class="nx">l</span><span class="p">){</span><span class="kd">var</span> <span class="nx">k</span><span class="p">,</span><span class="nx">i</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">rules</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">k</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="o">--</span><span class="nx">k</span><span class="p">){</span><span class="nx">i</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">rules</span><span class="p">[</span><span class="nx">k</span><span class="p">];</span></div><div class='line' id='LC7'><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">selectorText</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">s</span><span class="o">+</span><span class="s2">&quot;-hover&quot;</span><span class="p">)</span><span class="o">!==-</span><span class="mi">1</span><span class="p">)</span><span class="nx">l</span><span class="p">.</span><span class="nx">removeRule</span><span class="p">(</span><span class="nx">k</span><span class="p">);</span><span class="k">else</span> <span class="nx">i</span><span class="p">.</span><span class="nx">selectorText</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;:hover&quot;</span><span class="p">)</span><span class="o">!==-</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">.</span><span class="nx">addRule</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">selectorText</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/:hover/g</span><span class="p">,</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">s</span><span class="o">+</span><span class="s2">&quot;-hover&quot;</span><span class="p">),</span><span class="nx">i</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">cssText</span><span class="p">,</span><span class="nx">k</span><span class="o">+</span><span class="mi">1</span><span class="p">)}}</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">styleSheets</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;</span><span class="o">++</span><span class="nx">b</span><span class="p">)</span><span class="k">try</span><span class="p">{</span><span class="nx">f</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">styleSheets</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">imports</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">imports</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="o">++</span><span class="nx">d</span><span class="p">)</span><span class="k">try</span><span class="p">{</span><span class="nx">a</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">imports</span><span class="p">[</span><span class="nx">d</span><span class="p">])}</span><span class="k">catch</span><span class="p">(</span><span class="nx">g</span><span class="p">){}}</span><span class="nx">a</span><span class="p">(</span><span class="nx">f</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">h</span><span class="p">){}};</span><span class="nx">n</span><span class="p">.</span><span class="nx">run</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">===</span><span class="nx">j</span><span class="p">)</span><span class="nx">a</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">n</span><span class="p">.</span><span class="nx">processStyleSheets</span><span class="p">();</span><span class="nx">C</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;*&quot;</span><span class="p">),</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span></div><div class='line' id='LC8'><span class="nx">s</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="o">++</span><span class="nx">d</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">currentStyle</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">!==</span><span class="mi">1</span><span class="o">||</span><span class="nx">g</span><span class="o">===</span><span class="nx">h</span><span class="o">||</span><span class="nx">n</span><span class="p">.</span><span class="nx">disallowed</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">scopeName</span><span class="o">===</span><span class="s2">&quot;rr&quot;</span><span class="p">))</span><span class="k">if</span><span class="p">((</span><span class="nx">f</span><span class="p">[</span><span class="s2">&quot;border-radius&quot;</span><span class="p">]</span><span class="o">||</span><span class="nx">f</span><span class="p">[</span><span class="s2">&quot;border-top-left-radius&quot;</span><span class="p">]</span><span class="o">||</span><span class="nx">f</span><span class="p">[</span><span class="s2">&quot;border-top-right-radius&quot;</span><span class="p">]</span><span class="o">||</span><span class="nx">f</span><span class="p">[</span><span class="s2">&quot;border-bottom-right-radius&quot;</span><span class="p">]</span><span class="o">||</span><span class="nx">f</span><span class="p">[</span><span class="s2">&quot;border-bottom-left-radius&quot;</span><span class="p">])</span><span class="o">!==</span><span class="nx">j</span><span class="o">||</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">)</span><span class="nx">n</span><span class="p">.</span><span class="nx">create</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">)}})};</span><span class="nx">n</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">element</span><span class="o">:</span><span class="nx">j</span><span class="p">,</span><span class="nx">container</span><span class="o">:</span><span class="nx">j</span><span class="p">,</span><span class="nx">dimensions</span><span class="o">:</span><span class="nx">j</span><span class="p">,</span><span class="nx">radii</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">borderWidths</span><span class="o">:</span><span class="nx">j</span><span class="p">,</span><span class="nx">vml</span><span class="o">:</span><span class="nx">j</span><span class="p">,</span><span class="nx">dynamic</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">backgroundImage</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">originalStyles</span><span class="o">:</span><span class="nx">j</span><span class="p">,</span><span class="nx">events</span><span class="o">:</span><span class="nx">j</span><span class="p">,</span><span class="nx">addEvent</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">events</span><span class="p">[</span><span class="nx">a</span><span class="p">][</span><span class="nx">b</span><span class="p">])</span><span class="k">this</span><span class="p">.</span><span class="nx">events</span><span class="p">[</span><span class="nx">a</span><span class="p">][</span><span class="nx">b</span><span class="p">].</span><span class="nx">push</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span></div><div class='line' id='LC9'><span class="k">else</span> <span class="k">this</span><span class="p">.</span><span class="nx">events</span><span class="p">[</span><span class="nx">a</span><span class="p">][</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="p">[</span><span class="nx">c</span><span class="p">];</span><span class="k">this</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">attachEvent</span><span class="p">(</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">removeEvent</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">l</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">!==</span><span class="nx">j</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="p">{};</span><span class="nx">d</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">}</span><span class="k">else</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">events</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span> <span class="k">in</span> <span class="nx">d</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">f</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">!==</span><span class="nx">j</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="p">{};</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">}</span><span class="k">else</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">events</span><span class="p">[</span><span class="nx">f</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">g</span><span class="p">)){</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">events</span><span class="p">[</span><span class="nx">f</span><span class="p">][</span><span class="nx">g</span><span class="p">];</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">l</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">;</span><span class="o">++</span><span class="nx">h</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">===</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">detachEvent</span><span class="p">(</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">g</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="mi">1</span><span class="p">)[</span><span class="mi">0</span><span class="p">]);</span><span class="k">return</span><span class="p">}</span><span class="k">else</span> <span class="nx">c</span><span class="o">===</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">detachEvent</span><span class="p">(</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">g</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="nx">h</span><span class="p">]);</span><span class="nx">c</span><span class="o">===</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">events</span><span class="p">[</span><span class="nx">f</span><span class="p">][</span><span class="nx">g</span><span class="p">]}}},</span><span class="nx">destroy</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">[</span><span class="nx">t</span><span class="p">],</span><span class="nx">c</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">removeEvent</span><span class="p">();</span></div><div class='line' id='LC10'><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">removeAttribute</span><span class="p">(</span><span class="nx">t</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">vml</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">vml</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">vml</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">c</span><span class="p">)){</span><span class="k">this</span><span class="p">.</span><span class="nx">vml</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">filler</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">vml</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">parentNode</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">originalStyles</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">originalStyles</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">originalStyles</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">originalStyles</span><span class="p">[</span><span class="nx">c</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">}</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">delete</span> <span class="nx">p</span><span class="p">[</span><span class="nx">b</span><span class="p">]},</span><span class="nx">start</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">dynamic</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">modifyEvents</span><span class="p">(</span><span class="kc">true</span><span class="p">);</span></div><div class='line' id='LC11'><span class="k">this</span><span class="p">.</span><span class="nx">dynamic</span><span class="o">=</span><span class="kc">true</span><span class="p">}},</span><span class="nx">stop</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">dynamic</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">modifyEvents</span><span class="p">(</span><span class="kc">false</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">dynamic</span><span class="o">=</span><span class="kc">false</span><span class="p">}},</span><span class="nx">modifyEvents</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">onStateChangeProxy</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">onVmlStateChangeProxy</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">?</span><span class="s2">&quot;addEvent&quot;</span><span class="o">:</span><span class="s2">&quot;removeEvent&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">[</span><span class="nx">a</span><span class="p">](</span><span class="s2">&quot;element&quot;</span><span class="p">,</span><span class="s2">&quot;propertychange&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">onPropertyChangeProxy</span><span class="p">);</span><span class="k">this</span><span class="p">[</span><span class="nx">a</span><span class="p">](</span><span class="s2">&quot;element&quot;</span><span class="p">,</span><span class="s2">&quot;mouseenter&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">[</span><span class="nx">a</span><span class="p">](</span><span class="s2">&quot;element&quot;</span><span class="p">,</span><span class="s2">&quot;mouseleave&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">[</span><span class="nx">a</span><span class="p">](</span><span class="s2">&quot;element&quot;</span><span class="p">,</span><span class="s2">&quot;focus&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">[</span><span class="nx">a</span><span class="p">](</span><span class="s2">&quot;element&quot;</span><span class="p">,</span><span class="s2">&quot;blur&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">[</span><span class="nx">a</span><span class="p">](</span><span class="s2">&quot;element&quot;</span><span class="p">,</span><span class="s2">&quot;resize&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">[</span><span class="nx">a</span><span class="p">](</span><span class="s2">&quot;element&quot;</span><span class="p">,</span><span class="s2">&quot;move&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">[</span><span class="nx">a</span><span class="p">](</span><span class="s2">&quot;container&quot;</span><span class="p">,</span><span class="s2">&quot;mouseover&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">this</span><span class="p">[</span><span class="nx">a</span><span class="p">](</span><span class="s2">&quot;container&quot;</span><span class="p">,</span></div><div class='line' id='LC12'><span class="s2">&quot;mouseout&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">this</span><span class="p">[</span><span class="nx">a</span><span class="p">](</span><span class="s2">&quot;container&quot;</span><span class="p">,</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">addClass</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">((</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">className</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="p">).</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="p">)</span><span class="o">===-</span><span class="mi">1</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">className</span><span class="o">+=</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">},</span><span class="nx">removeClass</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">className</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="p">)</span><span class="o">!==-</span><span class="mi">1</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">s</span><span class="o">+</span><span class="s2">&quot;-hover &quot;</span><span class="p">,</span><span class="s2">&quot; &quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^\s+|\s+$/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)},</span><span class="nx">onVmlStateChangeProxy</span><span class="o">:</span><span class="nx">j</span><span class="p">,</span><span class="nx">onVmlStateChange</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">===</span><span class="s2">&quot;click&quot;</span><span class="o">&amp;&amp;</span><span class="nx">F</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">)){</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">createTextRange</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">moveStart</span><span class="p">(</span><span class="s2">&quot;textedit&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">select</span><span class="p">()}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">===</span><span class="s2">&quot;click&quot;</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC13'><span class="nx">A</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">))</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">click</span><span class="p">();</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">===</span><span class="s2">&quot;click&quot;</span><span class="o">&amp;&amp;</span><span class="nb">document</span><span class="p">.</span><span class="nx">activeElement</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="o">&amp;&amp;</span><span class="nb">document</span><span class="p">.</span><span class="nx">activeElement</span><span class="o">!==</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">)</span><span class="nb">document</span><span class="p">.</span><span class="nx">activeElement</span><span class="p">.</span><span class="nx">blur</span><span class="p">();</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">===</span><span class="s2">&quot;mouseover&quot;</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">z</span><span class="p">);</span><span class="k">else</span> <span class="nx">a</span><span class="o">===</span><span class="s2">&quot;mouseout&quot;</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">z</span><span class="p">)},</span><span class="nx">onPropertyChangeProxy</span><span class="o">:</span><span class="nx">j</span><span class="p">,</span><span class="nx">onPropertyChange</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">style</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">style</span><span class="p">;</span><span class="k">switch</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">case</span> <span class="s2">&quot;style.display&quot;</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">display</span><span class="o">===</span><span class="s2">&quot;none&quot;</span><span class="o">?</span><span class="s2">&quot;none&quot;</span><span class="o">:</span><span class="s2">&quot;block&quot;</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;style&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;className&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;style.cssText&quot;</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">dimensions</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">calculateDimensions</span><span class="p">();</span></div><div class='line' id='LC14'><span class="k">case</span> <span class="s2">&quot;style.border&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;style.borderTop&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;style.borderRight&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;style.borderBottom&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;style.borderLeft&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;style.borderTopWidth&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;style.borderRightWidth&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;style.borderBottomWidth&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;style.borderLeftWidth&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;style.borderWidth&quot;</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">borderWidths</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">calculateBorderWidths</span><span class="p">();</span><span class="k">case</span> <span class="s2">&quot;style.border-radius&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;style.border-top-left-radius&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;style.border-top-right-radius&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;style.border-bottom-right-radius&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;style.border-bottom-left-radius&quot;</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">radii</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">calculateRadii</span><span class="p">();</span></div><div class='line' id='LC15'><span class="k">case</span> <span class="s2">&quot;style.padding&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;style.background&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;style.backgroundImage&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;style.backgroundColor&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;style.backgroundPosition&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;style.backgroundRepeat&quot;</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">applyVML</span><span class="p">();</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;style.borderColor&quot;</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">vmlStrokeColor</span><span class="p">();</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;style.visibility&quot;</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">visibility</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">visibility</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;style.filter&quot;</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">vmlOpacity</span><span class="p">();</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;style.zIndex&quot;</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">zIndex</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">zIndex</span><span class="p">;</span><span class="k">break</span><span class="p">}},</span><span class="nx">onStateChangeProxy</span><span class="o">:</span><span class="nx">j</span><span class="p">,</span><span class="nx">onStateChange</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">===</span><span class="s2">&quot;resize&quot;</span><span class="o">||</span><span class="nx">a</span><span class="o">===</span><span class="s2">&quot;move&quot;</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">dimensions</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">dimensions</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">calculateDimensions</span><span class="p">();</span></div><div class='line' id='LC16'><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">dimensions</span><span class="p">.</span><span class="nx">width</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">dimensions</span><span class="p">.</span><span class="nx">height</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">dimensions</span><span class="p">.</span><span class="nx">top</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">top</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">dimensions</span><span class="p">.</span><span class="nx">left</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">left</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">vmlOffsets</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">vmlPath</span><span class="p">()}}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">A</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">===</span><span class="s2">&quot;mouseenter&quot;</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">z</span><span class="p">);</span><span class="k">else</span> <span class="nx">a</span><span class="o">===</span><span class="s2">&quot;mouseleave&quot;</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">z</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">runtimeStyle</span><span class="p">.</span><span class="nx">cssText</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">dimensions</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">calculateDimensions</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">borderWidths</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">calculateBorderWidths</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">radii</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">calculateRadii</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">applyVML</span><span class="p">()}},</span><span class="nx">calculateRadii</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">currentStyle</span><span class="p">,</span></div><div class='line' id='LC17'><span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">((</span><span class="nx">a</span><span class="p">[</span><span class="s2">&quot;border-radius&quot;</span><span class="p">]</span><span class="o">||</span><span class="nx">a</span><span class="p">[</span><span class="s2">&quot;border-top-left-radius&quot;</span><span class="p">]</span><span class="o">||</span><span class="nx">a</span><span class="p">[</span><span class="s2">&quot;border-top-right-radius&quot;</span><span class="p">]</span><span class="o">||</span><span class="nx">a</span><span class="p">[</span><span class="s2">&quot;border-bottom-right-radius&quot;</span><span class="p">]</span><span class="o">||</span><span class="nx">a</span><span class="p">[</span><span class="s2">&quot;border-bottom-left-radius&quot;</span><span class="p">])</span><span class="o">===</span><span class="nx">j</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="s2">&quot;border-radius&quot;</span><span class="p">]</span><span class="o">||</span><span class="s2">&quot;0 0 0 0&quot;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\s+\//</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[^0-9\s]/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\s+/</span><span class="p">);</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="s2">&quot;border-top-left-radius&quot;</span><span class="p">]</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[^0-9]/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">||</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="s2">&quot;border-top-right-radius&quot;</span><span class="p">]</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[^0-9]/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">||</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="s2">&quot;border-bottom-right-radius&quot;</span><span class="p">]</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[^0-9]/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">||</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="nx">b</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">=</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="s2">&quot;border-bottom-left-radius&quot;</span><span class="p">]</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[^0-9]/g</span><span class="p">,</span></div><div class='line' id='LC18'><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">||</span><span class="nx">b</span><span class="p">[</span><span class="mi">3</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">&lt;</span><span class="mi">4</span><span class="p">;</span><span class="o">++</span><span class="nx">a</span><span class="p">)</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">===</span><span class="nx">j</span><span class="o">?+</span><span class="nx">b</span><span class="p">[</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">a</span><span class="o">-</span><span class="mi">2</span><span class="p">,</span><span class="mi">0</span><span class="p">)]</span><span class="o">:+</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">+</span><span class="nx">b</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">===</span><span class="mi">0</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="p">},</span><span class="nx">calculateDimensions</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">width</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">offsetWidth</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">offsetHeight</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">offsetLeft</span><span class="p">,</span><span class="nx">top</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">offsetTop</span><span class="p">}},</span><span class="nx">calculateBorderWidths</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">currentStyle</span><span class="p">;</span><span class="k">return</span><span class="p">{</span><span class="nx">top</span><span class="o">:</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">borderTopWidth</span><span class="p">,</span><span class="mi">10</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">right</span><span class="o">:</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">borderRightWidth</span><span class="p">,</span><span class="mi">10</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">bottom</span><span class="o">:</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">borderBottomWidth</span><span class="p">,</span><span class="mi">10</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">borderLeftWidth</span><span class="p">,</span><span class="mi">10</span><span class="p">)</span><span class="o">||</span></div><div class='line' id='LC19'><span class="mi">0</span><span class="p">}},</span><span class="nx">render</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentStyle</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">(),</span><span class="nx">d</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="o">||</span><span class="nx">n</span><span class="p">.</span><span class="nx">disallowed</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">radii</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">calculateRadii</span><span class="p">())</span><span class="o">===</span><span class="kc">null</span><span class="p">)){</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">behavior</span><span class="o">=</span><span class="s2">&quot;none&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">originalStyles</span><span class="o">=</span><span class="p">{</span><span class="nx">zoom</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">zoom</span><span class="p">,</span><span class="nx">position</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">position</span><span class="p">,</span><span class="nx">top</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">top</span><span class="p">,</span><span class="nx">right</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">right</span><span class="p">,</span><span class="nx">bottom</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">bottom</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">left</span><span class="p">};</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="nx">s</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">runtimeStyle</span><span class="p">.</span><span class="nx">cssText</span><span class="o">=</span><span class="s2">&quot;behavior:none;position:absolute;margin:0;padding:0;border:0;background:none;&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">zIndex</span><span class="o">=</span></div><div class='line' id='LC20'><span class="nx">b</span><span class="p">.</span><span class="nx">zIndex</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">vml</span><span class="o">=</span><span class="p">{</span><span class="nx">color</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">image</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">stroke</span><span class="o">:</span><span class="kc">null</span><span class="p">};</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">vml</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">vml</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">d</span><span class="p">)){</span><span class="k">this</span><span class="p">.</span><span class="nx">vml</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;rr:shape&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">vml</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">filler</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;rr:fill&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">vml</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">vml</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">filler</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">vml</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">stroked</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">vml</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">style</span><span class="p">.</span><span class="nx">position</span><span class="o">=</span><span class="s2">&quot;absolute&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">vml</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">style</span><span class="p">.</span><span class="nx">zIndex</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">zIndex</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">vml</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">coordorigin</span><span class="o">=</span><span class="s2">&quot;1,1&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">vml</span><span class="p">[</span><span class="nx">d</span><span class="p">])}</span><span class="k">this</span><span class="p">.</span><span class="nx">vml</span><span class="p">.</span><span class="nx">image</span><span class="p">.</span><span class="nx">fillcolor</span><span class="o">=</span><span class="s2">&quot;none&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">vml</span><span class="p">.</span><span class="nx">image</span><span class="p">.</span><span class="nx">filler</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="s2">&quot;tile&quot;</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">,</span></div><div class='line' id='LC21'><span class="nx">a</span><span class="p">);(</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="o">++</span><span class="nx">f</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">f</span><span class="p">];</span><span class="nx">e</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">zoom</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">currentStyle</span><span class="p">.</span><span class="nx">position</span><span class="o">===</span><span class="s2">&quot;static&quot;</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">position</span><span class="o">=</span><span class="s2">&quot;relative&quot;</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="s2">&quot;auto&quot;</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">right</span><span class="o">=</span><span class="s2">&quot;auto&quot;</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">bottom</span><span class="o">=</span><span class="s2">&quot;auto&quot;</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="s2">&quot;auto&quot;</span><span class="p">}}})(</span><span class="nx">a</span><span class="p">.</span><span class="nx">offsetParent</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;IMG&quot;</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">visibility</span><span class="o">=</span><span class="s2">&quot;hidden&quot;</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">cursor</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">cursor</span><span class="o">===</span><span class="s2">&quot;auto&quot;</span><span class="o">?</span><span class="s2">&quot;text&quot;</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">cursor</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">A</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">cursor</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">cursor</span><span class="o">===</span><span class="s2">&quot;auto&quot;</span><span class="o">?</span><span class="s2">&quot;pointer&quot;</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">cursor</span><span class="p">;</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">r</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">addEvent</span><span class="p">(</span><span class="s2">&quot;container&quot;</span><span class="p">,</span></div><div class='line' id='LC22'><span class="s2">&quot;mouseenter&quot;</span><span class="p">,</span><span class="nx">r</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createEventObject</span><span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">event</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">toElement</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">srcElement</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">fireEvent</span><span class="p">(</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nb">window</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">e</span><span class="p">)}));</span><span class="k">this</span><span class="p">.</span><span class="nx">addEvent</span><span class="p">(</span><span class="s2">&quot;container&quot;</span><span class="p">,</span><span class="s2">&quot;mouseleave&quot;</span><span class="p">,</span><span class="nx">r</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createEventObject</span><span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">event</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">fromElement</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">srcElement</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">fireEvent</span><span class="p">(</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nb">window</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">e</span><span class="p">)}));</span><span class="k">this</span><span class="p">.</span><span class="nx">dimensions</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">calculateDimensions</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">borderWidths</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">calculateBorderWidths</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">applyVML</span><span class="p">()}))}},</span><span class="nx">applyVML</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">dimensions</span><span class="p">.</span><span class="nx">width</span><span class="o">===</span></div><div class='line' id='LC23'><span class="mi">0</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">dimensions</span><span class="p">.</span><span class="nx">height</span><span class="o">===</span><span class="mi">0</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">dimensions</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">calculateDimensions</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">dimensions</span><span class="p">.</span><span class="nx">width</span><span class="o">===</span><span class="mi">0</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">dimensions</span><span class="p">.</span><span class="nx">height</span><span class="o">===</span><span class="mi">0</span><span class="p">)){</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">runtimeStyle</span><span class="p">.</span><span class="nx">cssText</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">vmlFill</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">vmlStrokeColor</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">vmlOffsets</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">vmlPath</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">padBorder</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">vmlOpacity</span><span class="p">()}},</span><span class="nx">vmlOpacity</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">vml</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="sr">/Opacity=([0-9]+)/i</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">currentStyle</span><span class="p">.</span><span class="nx">filter</span><span class="p">)){</span><span class="nx">a</span><span class="o">=+</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="mf">0.01</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span> <span class="k">in</span> <span class="nx">b</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">filler</span><span class="p">.</span><span class="nx">opacity</span><span class="o">=</span><span class="nx">a</span><span class="p">}},</span><span class="nx">vmlStrokeColor</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">vml</span><span class="p">.</span><span class="nx">stroke</span><span class="p">.</span><span class="nx">fillcolor</span><span class="o">=</span></div><div class='line' id='LC24'><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">currentStyle</span><span class="p">.</span><span class="nx">borderColor</span><span class="p">},</span><span class="nx">vmlOffsets</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="nx">g</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="p">(</span><span class="nx">h</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">left</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">;</span><span class="nx">g</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="p">(</span><span class="nx">h</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">top</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">;</span><span class="nx">g</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">;</span><span class="nx">g</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">}</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">dimensions</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">vml</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">d</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">c</span><span class="p">)){</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;image&quot;</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="mi">2</span><span class="p">;</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">coordsize</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="o">*</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;,&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="o">*</span><span class="nx">e</span><span class="p">;</span><span class="nx">a</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="kc">true</span><span class="p">)}</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">,</span><span class="kc">false</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">B</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">()</span><span class="o">===</span><span class="s2">&quot;TD&quot;</span><span class="o">||</span><span class="nx">f</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">()</span><span class="o">===</span><span class="s2">&quot;TH&quot;</span><span class="p">)){</span><span class="nx">f</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">currentStyle</span><span class="p">.</span><span class="nx">width</span><span class="o">===</span></div><div class='line' id='LC25'><span class="s2">&quot;auto&quot;</span><span class="p">)</span><span class="nx">f</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">}},</span><span class="nx">vmlPath</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">x</span><span class="p">){</span><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="nx">h</span><span class="o">?</span><span class="p">[</span><span class="s2">&quot;m&quot;</span><span class="p">,</span><span class="s2">&quot;qy&quot;</span><span class="p">,</span><span class="s2">&quot;l&quot;</span><span class="p">,</span><span class="s2">&quot;qx&quot;</span><span class="p">,</span><span class="s2">&quot;l&quot;</span><span class="p">,</span><span class="s2">&quot;qy&quot;</span><span class="p">,</span><span class="s2">&quot;l&quot;</span><span class="p">,</span><span class="s2">&quot;qx&quot;</span><span class="p">,</span><span class="s2">&quot;l&quot;</span><span class="p">]</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;qx&quot;</span><span class="p">,</span><span class="s2">&quot;l&quot;</span><span class="p">,</span><span class="s2">&quot;qy&quot;</span><span class="p">,</span><span class="s2">&quot;l&quot;</span><span class="p">,</span><span class="s2">&quot;qx&quot;</span><span class="p">,</span><span class="s2">&quot;l&quot;</span><span class="p">,</span><span class="s2">&quot;qy&quot;</span><span class="p">,</span><span class="s2">&quot;l&quot;</span><span class="p">,</span><span class="s2">&quot;m&quot;</span><span class="p">];</span><span class="nx">i</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">slice</span><span class="p">();</span><span class="kd">var</span> <span class="nx">v</span><span class="p">;</span><span class="nx">o</span><span class="o">*=</span><span class="nx">x</span><span class="p">;</span><span class="nx">m</span><span class="o">*=</span><span class="nx">x</span><span class="p">;</span><span class="nx">l</span><span class="o">*=</span><span class="nx">x</span><span class="p">;</span><span class="nx">k</span><span class="o">*=</span><span class="nx">x</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">v</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">v</span><span class="o">&lt;</span><span class="mi">4</span><span class="p">;</span><span class="o">++</span><span class="nx">v</span><span class="p">){</span><span class="nx">i</span><span class="p">[</span><span class="nx">v</span><span class="p">]</span><span class="o">*=</span><span class="nx">x</span><span class="p">;</span><span class="nx">i</span><span class="p">[</span><span class="nx">v</span><span class="p">]</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">l</span><span class="o">*</span><span class="mf">0.5</span><span class="p">,</span><span class="nx">k</span><span class="o">*</span><span class="mf">0.5</span><span class="p">,</span><span class="nx">i</span><span class="p">[</span><span class="nx">v</span><span class="p">])}</span><span class="nx">l</span><span class="o">=</span><span class="p">[</span><span class="nx">q</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="mi">0</span><span class="o">+</span><span class="nx">o</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;,&quot;</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="nx">m</span><span class="p">),</span><span class="nx">q</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="nx">o</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;,&quot;</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="mi">0</span><span class="o">+</span><span class="nx">m</span><span class="p">),</span><span class="nx">q</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">l</span><span class="o">-</span><span class="nx">i</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="nx">o</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;,&quot;</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="mi">0</span><span class="o">+</span><span class="nx">m</span><span class="p">),</span><span class="nx">q</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">l</span><span class="o">+</span><span class="nx">o</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;,&quot;</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="nx">m</span><span class="p">),</span><span class="nx">q</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">l</span><span class="o">+</span><span class="nx">o</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;,&quot;</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">k</span><span class="o">-</span><span class="nx">i</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">+</span><span class="nx">m</span><span class="p">),</span><span class="nx">q</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">l</span><span class="o">-</span></div><div class='line' id='LC26'><span class="nx">i</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">+</span><span class="nx">o</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;,&quot;</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">k</span><span class="o">+</span><span class="nx">m</span><span class="p">),</span><span class="nx">q</span><span class="p">[</span><span class="mi">6</span><span class="p">]</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">+</span><span class="nx">o</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;,&quot;</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">k</span><span class="o">+</span><span class="nx">m</span><span class="p">),</span><span class="nx">q</span><span class="p">[</span><span class="mi">7</span><span class="p">]</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="mi">0</span><span class="o">+</span><span class="nx">o</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;,&quot;</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">k</span><span class="o">-</span><span class="nx">i</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">+</span><span class="nx">m</span><span class="p">),</span><span class="nx">q</span><span class="p">[</span><span class="mi">8</span><span class="p">]</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="mi">0</span><span class="o">+</span><span class="nx">o</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;,&quot;</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="nx">m</span><span class="p">)];</span><span class="nx">h</span><span class="o">||</span><span class="nx">l</span><span class="p">.</span><span class="nx">reverse</span><span class="p">();</span><span class="k">return</span> <span class="nx">l</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">borderWidths</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">dimensions</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">radii</span><span class="p">.</span><span class="nx">slice</span><span class="p">(),</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">vml</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">===</span><span class="nx">j</span><span class="p">)</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">calculateBorderWidths</span><span class="p">();</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="kc">true</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">);</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">-=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">left</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">top</span><span class="p">);</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">-=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">top</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">right</span><span class="p">);</span><span class="nx">d</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">-=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">right</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">bottom</span><span class="p">);</span><span class="nx">d</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">-=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">bottom</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">left</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="mi">4</span><span class="p">;</span><span class="o">++</span><span class="nx">f</span><span class="p">)</span><span class="nx">d</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span></div><div class='line' id='LC27'><span class="mi">0</span><span class="p">);</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="kc">false</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">width</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">left</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">right</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">height</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">top</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">bottom</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">left</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">top</span><span class="p">,</span><span class="mi">2</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="kc">true</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">width</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">left</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">right</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">height</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">top</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">bottom</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">left</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">top</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">color</span><span class="p">.</span><span class="nx">path</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">image</span><span class="p">.</span><span class="nx">path</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">stroke</span><span class="p">.</span><span class="nx">path</span><span class="o">=</span><span class="nx">g</span><span class="o">+</span><span class="nx">f</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">clipImage</span><span class="p">()},</span><span class="nx">padBorder</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;Top&quot;</span><span class="p">,</span><span class="s2">&quot;Right&quot;</span><span class="p">,</span><span class="s2">&quot;Bottom&quot;</span><span class="p">,</span><span class="s2">&quot;Left&quot;</span><span class="p">],</span><span class="nx">c</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="mi">4</span><span class="p">;</span><span class="o">++</span><span class="nx">c</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">runtimeStyle</span><span class="p">[</span><span class="s2">&quot;padding&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]]</span><span class="o">=</span><span class="nx">E</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;padding&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">])</span><span class="o">+</span><span class="nx">E</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;border&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;Width&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">runtimeStyle</span><span class="p">.</span><span class="nx">border</span><span class="o">=</span><span class="s2">&quot;none&quot;</span><span class="p">},</span><span class="nx">vmlFill</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentStyle</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">tagName</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">()</span><span class="o">===</span></div><div class='line' id='LC28'><span class="s2">&quot;IMG&quot;</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">vml</span><span class="p">,</span><span class="nx">e</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">runtimeStyle</span><span class="p">.</span><span class="nx">backgroundColor</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">runtimeStyle</span><span class="p">.</span><span class="nx">backgroundImage</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">backgroundImage</span><span class="o">!==</span><span class="s2">&quot;none&quot;</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">backgroundImage</span><span class="o">=</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">src</span><span class="o">:</span><span class="sr">/^url\([&quot;&#39;]?\s*(.+?)\s*[&quot;&#39;]?\)$/</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">backgroundImage</span><span class="p">)[</span><span class="mi">1</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">u</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">===</span><span class="nx">j</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">Image</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">(</span><span class="s2">&quot;onload&quot;</span><span class="p">,</span><span class="nx">r</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">u</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">width</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="p">};</span><span class="k">this</span><span class="p">.</span><span class="nx">vmlOffsets</span><span class="p">()}));</span><span class="nx">c</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="nx">u</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">}</span><span class="nx">d</span><span class="p">.</span><span class="nx">image</span><span class="p">.</span><span class="nx">filler</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="kc">true</span><span class="p">}</span><span class="nx">d</span><span class="p">.</span><span class="nx">image</span><span class="p">.</span><span class="nx">filled</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">image</span><span class="p">.</span><span class="nx">fillcolor</span><span class="o">=</span><span class="s2">&quot;none&quot;</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">color</span><span class="p">.</span><span class="nx">filled</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">backgroundColor</span><span class="o">!==</span><span class="s2">&quot;transparent&quot;</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">color</span><span class="p">.</span><span class="nx">fillcolor</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">backgroundColor</span><span class="p">;</span></div><div class='line' id='LC29'><span class="nx">a</span><span class="p">.</span><span class="nx">runtimeStyle</span><span class="p">.</span><span class="nx">backgroundImage</span><span class="o">=</span><span class="s2">&quot;none&quot;</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">runtimeStyle</span><span class="p">.</span><span class="nx">backgroundColor</span><span class="o">=</span><span class="s2">&quot;transparent&quot;</span><span class="p">},</span><span class="nx">clipImage</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">switch</span><span class="p">(</span><span class="nx">i</span><span class="p">){</span><span class="k">case</span> <span class="s2">&quot;left&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;top&quot;</span><span class="o">:</span><span class="nx">g</span><span class="p">[</span><span class="nx">k</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;center&quot;</span><span class="o">:</span><span class="nx">g</span><span class="p">[</span><span class="nx">k</span><span class="p">]</span><span class="o">=</span><span class="mf">0.5</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="s2">&quot;right&quot;</span><span class="o">:</span><span class="k">case</span> <span class="s2">&quot;bottom&quot;</span><span class="o">:</span><span class="nx">g</span><span class="p">[</span><span class="nx">k</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">default</span><span class="o">:</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;%&quot;</span><span class="p">)</span><span class="o">!==-</span><span class="mi">1</span><span class="p">)</span><span class="nx">g</span><span class="p">[</span><span class="nx">k</span><span class="p">]</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="mi">10</span><span class="p">)</span><span class="o">*</span><span class="mf">0.01</span><span class="p">;</span><span class="k">else</span> <span class="nx">o</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">break</span><span class="p">}</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">k</span><span class="o">===</span><span class="s2">&quot;X&quot;</span><span class="p">;</span><span class="nx">g</span><span class="p">[</span><span class="nx">k</span><span class="p">]</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">o</span><span class="o">?</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">m</span><span class="o">?</span><span class="s2">&quot;width&quot;</span><span class="o">:</span><span class="s2">&quot;height&quot;</span><span class="p">]</span><span class="o">-</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">m</span><span class="o">?</span><span class="s2">&quot;left&quot;</span><span class="o">:</span><span class="s2">&quot;top&quot;</span><span class="p">]</span><span class="o">+</span><span class="nx">e</span><span class="p">[</span><span class="nx">m</span><span class="o">?</span><span class="s2">&quot;right&quot;</span><span class="o">:</span><span class="s2">&quot;bottom&quot;</span><span class="p">]))</span><span class="o">*</span><span class="nx">g</span><span class="p">[</span><span class="nx">k</span><span class="p">]</span><span class="o">-</span><span class="nx">u</span><span class="p">[</span><span class="nx">c</span><span class="p">][</span><span class="nx">m</span><span class="o">?</span><span class="s2">&quot;width&quot;</span><span class="o">:</span><span class="s2">&quot;height&quot;</span><span class="p">]</span><span class="o">*</span><span class="nx">g</span><span class="p">[</span><span class="nx">k</span><span class="p">]</span><span class="o">:</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="mi">10</span><span class="p">));</span><span class="nx">g</span><span class="p">[</span><span class="nx">k</span><span class="p">]</span><span class="o">+=</span><span class="mi">1</span><span class="p">}</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">currentStyle</span><span class="p">,</span></div><div class='line' id='LC30'><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">backgroundImage</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">calculateDimensions</span><span class="p">(),</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">calculateBorderWidths</span><span class="p">(),</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">vml</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">c</span><span class="o">===</span><span class="nx">j</span><span class="o">||</span><span class="nx">u</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">===</span><span class="nx">j</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="p">{</span><span class="nx">X</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">Y</span><span class="o">:</span><span class="mi">0</span><span class="p">};</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">h</span> <span class="k">in</span> <span class="nx">g</span><span class="p">)</span><span class="nx">g</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">b</span><span class="p">[</span><span class="s2">&quot;backgroundPosition&quot;</span><span class="o">+</span><span class="nx">h</span><span class="p">]);</span><span class="nx">f</span><span class="p">.</span><span class="nx">image</span><span class="p">.</span><span class="nx">filler</span><span class="p">.</span><span class="nx">position</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">X</span><span class="o">/</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="o">-</span><span class="nx">e</span><span class="p">.</span><span class="nx">left</span><span class="o">-</span><span class="nx">e</span><span class="p">.</span><span class="nx">right</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;,&quot;</span><span class="o">+</span><span class="nx">g</span><span class="p">.</span><span class="nx">Y</span><span class="o">/</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">height</span><span class="o">-</span><span class="nx">e</span><span class="p">.</span><span class="nx">top</span><span class="o">-</span><span class="nx">e</span><span class="p">.</span><span class="nx">bottom</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span><span class="nx">h</span><span class="o">=</span><span class="p">{</span><span class="nx">T</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">R</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="nx">B</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">height</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="nx">L</span><span class="o">:</span><span class="mi">1</span><span class="p">};</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="p">{</span><span class="nx">X</span><span class="o">:</span><span class="p">{</span><span class="nx">b1</span><span class="o">:</span><span class="s2">&quot;L&quot;</span><span class="p">,</span><span class="nx">b2</span><span class="o">:</span><span class="s2">&quot;R&quot;</span><span class="p">,</span><span class="nx">d</span><span class="o">:</span><span class="s2">&quot;Width&quot;</span><span class="p">},</span><span class="nx">Y</span><span class="o">:</span><span class="p">{</span><span class="nx">b1</span><span class="o">:</span><span class="s2">&quot;T&quot;</span><span class="p">,</span><span class="nx">b2</span><span class="o">:</span><span class="s2">&quot;B&quot;</span><span class="p">,</span><span class="nx">d</span><span class="o">:</span><span class="s2">&quot;Height&quot;</span><span class="p">}};</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">backgroundRepeat</span><span class="o">!==</span><span class="s2">&quot;repeat&quot;</span><span class="p">){</span><span class="nx">h</span><span class="o">=</span><span class="p">{</span><span class="nx">T</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">Y</span><span class="p">,</span><span class="nx">R</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">X</span><span class="o">+</span><span class="nx">u</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">width</span><span class="p">,</span><span class="nx">B</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">Y</span><span class="o">+</span><span class="nx">u</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">height</span><span class="p">,</span><span class="nx">L</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">X</span><span class="p">};</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">backgroundRepeat</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;repeat-&quot;</span><span class="p">)</span><span class="o">!==</span></div><div class='line' id='LC31'><span class="o">-</span><span class="mi">1</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">backgroundRepeat</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;repeat-&quot;</span><span class="p">)[</span><span class="mi">1</span><span class="p">].</span><span class="nx">toUpperCase</span><span class="p">();</span><span class="nx">h</span><span class="p">[</span><span class="nx">l</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">b1</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">h</span><span class="p">[</span><span class="nx">l</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">b2</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">l</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">d</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()]</span><span class="o">+</span><span class="mi">1</span><span class="p">}}</span><span class="nx">f</span><span class="p">.</span><span class="nx">image</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">clip</span><span class="o">=</span><span class="s2">&quot;rect(&quot;</span><span class="o">+</span><span class="nx">h</span><span class="p">.</span><span class="nx">T</span><span class="o">+</span><span class="s2">&quot;px &quot;</span><span class="o">+</span><span class="nx">h</span><span class="p">.</span><span class="nx">R</span><span class="o">+</span><span class="s2">&quot;px &quot;</span><span class="o">+</span><span class="nx">h</span><span class="p">.</span><span class="nx">B</span><span class="o">+</span><span class="s2">&quot;px &quot;</span><span class="o">+</span><span class="nx">h</span><span class="p">.</span><span class="nx">L</span><span class="o">+</span><span class="s2">&quot;px)&quot;</span><span class="p">}}};</span><span class="nb">window</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">=</span><span class="nx">n</span><span class="p">}})();</span></div></pre></div>
          </td>
        </tr>
      </table>
  </div>

          </div>
        </div>
      </div>
    </div>

  </div>

<div class="frame frame-loading large-loading-area" style="display:none;" data-tree-list-url="/csnover/RoundRect/tree-list/a4043ff48264e0e1e7878d7b436314c541ec381e" data-blob-url-prefix="/csnover/RoundRect/blob/a4043ff48264e0e1e7878d7b436314c541ec381e">
  <img src="https://a248.e.akamai.net/assets.github.com/images/spinners/octocat-spinner-64.gif?1338956357" height="64" width="64">
</div>

        </div>
      </div>
      <div class="context-overlay"></div>
    </div>

      <div id="footer-push"></div><!-- hack for sticky footer -->
    </div><!-- end of wrapper - hack for sticky footer -->

      <!-- footer -->
      <div id="footer" >
        
  <div class="upper_footer">
     <div class="container clearfix">

       <!--[if IE]><h4 id="blacktocat_ie">GitHub Links</h4><![endif]-->
       <![if !IE]><h4 id="blacktocat">GitHub Links</h4><![endif]>

       <ul class="footer_nav">
         <h4>GitHub</h4>
         <li><a href="https://github.com/about">About</a></li>
         <li><a href="https://github.com/blog">Blog</a></li>
         <li><a href="https://github.com/features">Features</a></li>
         <li><a href="https://github.com/contact">Contact &amp; Support</a></li>
         <li><a href="https://github.com/training">Training</a></li>
         <li><a href="http://enterprise.github.com/">GitHub Enterprise</a></li>
         <li><a href="http://status.github.com/">Site Status</a></li>
       </ul>

       <ul class="footer_nav">
         <h4>Clients</h4>
         <li><a href="http://mac.github.com/">GitHub for Mac</a></li>
         <li><a href="http://windows.github.com/">GitHub for Windows</a></li>
         <li><a href="http://eclipse.github.com/">GitHub for Eclipse</a></li>
         <li><a href="http://mobile.github.com/">GitHub Mobile Apps</a></li>
       </ul>

       <ul class="footer_nav">
         <h4>Tools</h4>
         <li><a href="http://get.gaug.es/">Gauges: Web analytics</a></li>
         <li><a href="http://speakerdeck.com">Speaker Deck: Presentations</a></li>
         <li><a href="https://gist.github.com">Gist: Code snippets</a></li>

         <h4 class="second">Extras</h4>
         <li><a href="http://jobs.github.com/">Job Board</a></li>
         <li><a href="http://shop.github.com/">GitHub Shop</a></li>
         <li><a href="http://octodex.github.com/">The Octodex</a></li>
       </ul>

       <ul class="footer_nav">
         <h4>Documentation</h4>
         <li><a href="http://help.github.com/">GitHub Help</a></li>
         <li><a href="http://developer.github.com/">Developer API</a></li>
         <li><a href="http://github.github.com/github-flavored-markdown/">GitHub Flavored Markdown</a></li>
         <li><a href="http://pages.github.com/">GitHub Pages</a></li>
       </ul>

     </div><!-- /.site -->
  </div><!-- /.upper_footer -->

<div class="lower_footer">
  <div class="container clearfix">
    <!--[if IE]><div id="legal_ie"><![endif]-->
    <![if !IE]><div id="legal"><![endif]>
      <ul>
          <li><a href="https://github.com/site/terms">Terms of Service</a></li>
          <li><a href="https://github.com/site/privacy">Privacy</a></li>
          <li><a href="https://github.com/security">Security</a></li>
      </ul>

      <p>&copy; 2012 <span title="0.05761s from fe1.rs.github.com">GitHub</span> Inc. All rights reserved.</p>
    </div><!-- /#legal or /#legal_ie-->

  </div><!-- /.site -->
</div><!-- /.lower_footer -->

      </div><!-- /#footer -->

    

<div id="keyboard_shortcuts_pane" class="instapaper_ignore readability-extra" style="display:none">
  <h2>Keyboard Shortcuts <small><a href="#" class="js-see-all-keyboard-shortcuts">(see all)</a></small></h2>

  <div class="columns threecols">
    <div class="column first">
      <h3>Site wide shortcuts</h3>
      <dl class="keyboard-mappings">
        <dt>s</dt>
        <dd>Focus site search</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>?</dt>
        <dd>Bring up this help dialog</dd>
      </dl>
    </div><!-- /.column.first -->

    <div class="column middle" style='display:none'>
      <h3>Commit list</h3>
      <dl class="keyboard-mappings">
        <dt>j</dt>
        <dd>Move selection down</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>k</dt>
        <dd>Move selection up</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>c <em>or</em> o <em>or</em> enter</dt>
        <dd>Open commit</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>y</dt>
        <dd>Expand URL to its canonical form</dd>
      </dl>
    </div><!-- /.column.first -->

    <div class="column last js-hidden-pane" style='display:none'>
      <h3>Pull request list</h3>
      <dl class="keyboard-mappings">
        <dt>j</dt>
        <dd>Move selection down</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>k</dt>
        <dd>Move selection up</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>o <em>or</em> enter</dt>
        <dd>Open issue</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt><span class="platform-mac">⌘</span><span class="platform-other">ctrl</span> <em>+</em> enter</dt>
        <dd>Submit comment</dd>
      </dl>
    </div><!-- /.columns.last -->

  </div><!-- /.columns.equacols -->

  <div class="js-hidden-pane" style='display:none'>
    <div class="rule"></div>

    <h3>Issues</h3>

    <div class="columns threecols">
      <div class="column first">
        <dl class="keyboard-mappings">
          <dt>j</dt>
          <dd>Move selection down</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>k</dt>
          <dd>Move selection up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>x</dt>
          <dd>Toggle selection</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>o <em>or</em> enter</dt>
          <dd>Open issue</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="platform-mac">⌘</span><span class="platform-other">ctrl</span> <em>+</em> enter</dt>
          <dd>Submit comment</dd>
        </dl>
      </div><!-- /.column.first -->
      <div class="column last">
        <dl class="keyboard-mappings">
          <dt>c</dt>
          <dd>Create issue</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>l</dt>
          <dd>Create label</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>i</dt>
          <dd>Back to inbox</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>u</dt>
          <dd>Back to issues</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>/</dt>
          <dd>Focus issues search</dd>
        </dl>
      </div>
    </div>
  </div>

  <div class="js-hidden-pane" style='display:none'>
    <div class="rule"></div>

    <h3>Issues Dashboard</h3>

    <div class="columns threecols">
      <div class="column first">
        <dl class="keyboard-mappings">
          <dt>j</dt>
          <dd>Move selection down</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>k</dt>
          <dd>Move selection up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>o <em>or</em> enter</dt>
          <dd>Open issue</dd>
        </dl>
      </div><!-- /.column.first -->
    </div>
  </div>

  <div class="js-hidden-pane" style='display:none'>
    <div class="rule"></div>

    <h3>Network Graph</h3>
    <div class="columns equacols">
      <div class="column first">
        <dl class="keyboard-mappings">
          <dt><span class="badmono">←</span> <em>or</em> h</dt>
          <dd>Scroll left</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="badmono">→</span> <em>or</em> l</dt>
          <dd>Scroll right</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="badmono">↑</span> <em>or</em> k</dt>
          <dd>Scroll up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="badmono">↓</span> <em>or</em> j</dt>
          <dd>Scroll down</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>t</dt>
          <dd>Toggle visibility of head labels</dd>
        </dl>
      </div><!-- /.column.first -->
      <div class="column last">
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">←</span> <em>or</em> shift h</dt>
          <dd>Scroll all the way left</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">→</span> <em>or</em> shift l</dt>
          <dd>Scroll all the way right</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">↑</span> <em>or</em> shift k</dt>
          <dd>Scroll all the way up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">↓</span> <em>or</em> shift j</dt>
          <dd>Scroll all the way down</dd>
        </dl>
      </div><!-- /.column.last -->
    </div>
  </div>

  <div class="js-hidden-pane" >
    <div class="rule"></div>
    <div class="columns threecols">
      <div class="column first js-hidden-pane" >
        <h3>Source Code Browsing</h3>
        <dl class="keyboard-mappings">
          <dt>t</dt>
          <dd>Activates the file finder</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>l</dt>
          <dd>Jump to line</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>w</dt>
          <dd>Switch branch/tag</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>y</dt>
          <dd>Expand URL to its canonical form</dd>
        </dl>
      </div>
    </div>
  </div>

  <div class="js-hidden-pane" style='display:none'>
    <div class="rule"></div>
    <div class="columns threecols">
      <div class="column first">
        <h3>Browsing Commits</h3>
        <dl class="keyboard-mappings">
          <dt><span class="platform-mac">⌘</span><span class="platform-other">ctrl</span> <em>+</em> enter</dt>
          <dd>Submit comment</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>escape</dt>
          <dd>Close form</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>p</dt>
          <dd>Parent commit</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>o</dt>
          <dd>Other parent commit</dd>
        </dl>
      </div>
    </div>
  </div>

  <div class="js-hidden-pane" style='display:none'>
    <div class="rule"></div>
    <h3>Notifications</h3>

    <div class="columns threecols">
      <div class="column first">
        <dl class="keyboard-mappings">
          <dt>j</dt>
          <dd>Move selection down</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>k</dt>
          <dd>Move selection up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>o <em>or</em> enter</dt>
          <dd>Open notification</dd>
        </dl>
      </div><!-- /.column.first -->

      <div class="column second">
        <dl class="keyboard-mappings">
          <dt>e <em>or</em> shift i <em>or</em> y</dt>
          <dd>Mark as read</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>shift m</dt>
          <dd>Mute thread</dd>
        </dl>
      </div><!-- /.column.first -->
    </div>
  </div>

</div>

    <div id="markdown-help" class="instapaper_ignore readability-extra">
  <h2>Markdown Cheat Sheet</h2>

  <div class="cheatsheet-content">

  <div class="mod">
    <div class="col">
      <h3>Format Text</h3>
      <p>Headers</p>
      <pre>
# This is an &lt;h1&gt; tag
## This is an &lt;h2&gt; tag
###### This is an &lt;h6&gt; tag</pre>
     <p>Text styles</p>
     <pre>
*This text will be italic*
_This will also be italic_
**This text will be bold**
__This will also be bold__

*You **can** combine them*
</pre>
    </div>
    <div class="col">
      <h3>Lists</h3>
      <p>Unordered</p>
      <pre>
* Item 1
* Item 2
  * Item 2a
  * Item 2b</pre>
     <p>Ordered</p>
     <pre>
1. Item 1
2. Item 2
3. Item 3
   * Item 3a
   * Item 3b</pre>
    </div>
    <div class="col">
      <h3>Miscellaneous</h3>
      <p>Images</p>
      <pre>
![GitHub Logo](/images/logo.png)
Format: ![Alt Text](url)
</pre>
     <p>Links</p>
     <pre>
http://github.com - automatic!
[GitHub](http://github.com)</pre>
<p>Blockquotes</p>
     <pre>
As Kanye West said:

> We're living the future so
> the present is our past.
</pre>
    </div>
  </div>
  <div class="rule"></div>

  <h3>Code Examples in Markdown</h3>
  <div class="col">
      <p>Syntax highlighting with <a href="http://github.github.com/github-flavored-markdown/" title="GitHub Flavored Markdown" target="_blank">GFM</a></p>
      <pre>
```javascript
function fancyAlert(arg) {
  if(arg) {
    $.facebox({div:'#foo'})
  }
}
```</pre>
    </div>
    <div class="col">
      <p>Or, indent your code 4 spaces</p>
      <pre>
Here is a Python code example
without syntax highlighting:

    def foo:
      if not bar:
        return true</pre>
    </div>
    <div class="col">
      <p>Inline code for comments</p>
      <pre>
I think you should use an
`&lt;addr&gt;` element here instead.</pre>
    </div>
  </div>

  </div>
</div>


    <div id="ajax-error-message">
      <span class="mini-icon mini-icon-exclamation"></span>
      Something went wrong with that request. Please try again.
      <a href="#" class="ajax-error-dismiss">Dismiss</a>
    </div>

    <div id="logo-popup">
      <h2>Looking for the GitHub logo?</h2>
      <ul>
        <li>
          <h4>GitHub Logo</h4>
          <a href="http://github-media-downloads.s3.amazonaws.com/GitHub_Logos.zip"><img alt="Github_logo" src="https://a248.e.akamai.net/assets.github.com/images/modules/about_page/github_logo.png?1338956357" /></a>
          <a href="http://github-media-downloads.s3.amazonaws.com/GitHub_Logos.zip" class="minibutton btn-download download">Download</a>
        </li>
        <li>
          <h4>The Octocat</h4>
          <a href="http://github-media-downloads.s3.amazonaws.com/Octocats.zip"><img alt="Octocat" src="https://a248.e.akamai.net/assets.github.com/images/modules/about_page/octocat.png?1338956357" /></a>
          <a href="http://github-media-downloads.s3.amazonaws.com/Octocats.zip" class="minibutton btn-download download">Download</a>
        </li>
      </ul>
    </div>

    
    <span id='server_response_time' data-time='0.06019' data-host='fe1'></span>
  </body>
</html>

